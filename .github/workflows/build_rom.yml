name: Rom Builder
on: 
  workflow_dispatch:
  push:
defaults:
  run:
    shell: bash

jobs:

  build:
    name: Deploy..
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Notif Start
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        timeout: 1m
        command_timeout: 1m
        proxy_timeout: 1m
        script: |
          my_dir="$(pwd)/NFS-project"
          cd $my_dir
          rm -rf build_rom.sh
          wget https://raw.githubusercontent.com/NFS86/Rom-Builder/master/build_rom.sh

    - name: Sync Rom
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        timeout: 30m
        command_timeout: 30m
        proxy_timeout: 30m
        script: |
          my_dir="$(pwd)/NFS-project"
          rom_name="$(grep init $my_dir/build_rom.sh -m 1 | cut -d / -f 4)"
          command="$(head $my_dir/build_rom.sh -n $(expr $(grep '# build rom' $my_dir/build_rom.sh -n | cut -f1 -d:) - 1))"
          mkdir -p $my_dir/$rom_name
          cd $my_dir/$rom_name
          rm -rf .repo/local_manifests
          bash -c "$command" || true

    - name: Building Rom
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        timeout: 480m
        command_timeout: 480m
        proxy_timeout: 480m
        script: |
          my_dir="$(pwd)/NFS-project"
          rom_name="$(grep init $my_dir/build_rom.sh -m 1 | cut -d / -f 4)"
          command="$(tail $my_dir/build_rom.sh -n +$(expr $(grep 'build/envsetup.sh' $my_dir/build_rom.sh -n | cut -f1 -d:) - 1)| head -n -1 | grep -v '# end')"
          cd $my_dir/$rom_name
          export CCACHE_EXEC=/usr/bin/ccache
          export USE_CCACHE=1
          ccache -o compression=true
          ccache -o compression_level=1
          ccache -o limit_multiple=1
          ccache -o max_size=150G
          ccache -z
          bash -c "$command"

    - name: Push Rom
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        timeout: 10m
        command_timeout: 10m
        proxy_timeout: 10m
        script: |
          my_dir="$(pwd)/NFS-project"
          rom_name="$(grep init $my_dir/build_rom.sh -m 1 | cut -d / -f 4)"
          device="$(grep unch $my_dir/build_rom.sh -m 1 | cut -d ' ' -f 2 | cut -d _ -f 2 | cut -d - -f 1)"
          rel_date="$(date "+%Y%m%d")"
          output="out/target/product/$device/*$rel_date*.zip"
          ota="out/target/product/$device/*ota*.zip"
          cd $my_dir/$rom_name
          rclone copy --drive-chunk-size 256M --stats 1s $output NFS:rom/$rom_name -P
          echo "Download link https://needforspeed.projek.workers.dev/rom/$rom_name/$(ls $output)"
          rm -rf out/target/product/$device

    - uses: yanzay/notify-telegram@v0.1.0
      if: always()
      with:
        chat: ${{ secrets.TG_ID }} # user id or channel name secret
        token: ${{ secrets.TG_TOKEN }} # token secret
        status: ${{ job.status }} # do not modify this line
